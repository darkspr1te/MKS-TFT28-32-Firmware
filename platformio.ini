; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter, extra scripting
;   Upload options: custom port, speed and extra flags
;   Library options: dependencies, extra library storages
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = mkstft_28
;src_dir = Src
src_dir = Project/MKSTFT25/
;include_dir = Libraries/
;lib_dir = Libraries/
;libdeps_dir = Middlewares
;libdeps_dir = lib_deps
[common]
default_src_filter = +<Src/*> +<Middlewares/> -<Drivers/> +<Libraries/GUI/> +<Libraries/CMSIS/Device/ST/STM32F10x/Include/> 
[env:mkstft_28]
platform = ststm32
board = eval_f107vc
framework = stm32cube
build_flags = 
 ;-std=c11
					-Wall
				;	-funroll-loops
				;	-fdata-sections
				;	-ffunction-sections
				;	-Os
				;	-g3
				;	-fno-exceptions
				;	-fno-rtti
					-std=c++11
					-Wall
				;	-funroll-loops
				;	-fdata-sections
				;	-ffunction-sections
				;	-Os
				;	-g3
				;	-Wa,--gdwarf-2
				;	-u _scanf_float
				;	-u _printf_float
				;	-lstdc++
				;	-Wl,--gc-sections
        -DUSE_STDPERIPH_DRIVER=
		-DUSE_STM3210C_EVAL=
		-DUSE_USB_OTG_FS=
		-DSTM32F10X_CL=
		-DMicroLIB=
	-ILibraries/CMSIS/Device/ST/STM32F10x/Include
	-ILibraries/STM32F10x_StdPeriph_Driver/inc
	-IUtilities/Third_Party/fat_fs/inc
	-ILibraries/GUI
    -IDrivers/CMSIS
    -IProject/MKSTFT25/inc
	-IProject/MKSTFT25/src/eeprom
	-IProject/MKSTFT25/src/uart_model
	-IProject/MKSTFT25/src/spi_flash
	-IProject/MKSTFT25/src/sd_drv/sys
	-IProject/MKSTFT25/src/Multi_language
	-IProject/MKSTFT25/src/pic
	-IProject/MKSTFT25/src/QRENCODE
	-IUtilities/STM32_EVAL/STM3210C_EVAL
	-IUtilities/STM32_EVAL/Common/
	-ILibraries/STM32_USB_HOST_Library/Core/inc
	
	-ILibraries/GUI/


src_filter =${common.default_src_filter} +<Src/*> +<Middlewares/FreeRTOS>
;extra_scripts = buildroot/scripts/stm32f10x_0x0000_iap.py
;lib_deps =
  # Using a library name
 # FatFs
  #https://github.com/stm32duino/FatFs.git
  ;boar  d_build.mcu = stm32f107vct
 ; change MCU frequency 
 ;board_build.f_cpu = 72000000
;lib_ldf_mode = deep
debug_tool = stlink
upload_protocol = stlink
;debug_init_break = break usb_dfu.c:186 

